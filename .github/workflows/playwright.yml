name: Playwright Tests

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: 'false'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changed:
              - services/user-service/**
              - services/product-service/**
              - services/order-service/**
              - frontend/**
              - .env
              - docker-compose*.yml
              - .github/workflows/playwright.yml

  test-playwright:
    needs: changes
    if: ${{ needs.changes.outputs.changed == 'true' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
        with:
          limit-access-to-actor: true
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true

      # Install dependencies for all backend services
      - run: uv sync
        working-directory: services/user-service
      - run: uv sync
        working-directory: services/product-service
      - run: uv sync
        working-directory: services/order-service

      # Install frontend deps
      - run: npm ci
        working-directory: frontend

      # Generate frontend API clients (if needed)
      - run: uv run bash scripts/generate-client.sh
        env:
          VIRTUAL_ENV: services/user-service/.venv

      # Build and run services
      - run: docker compose build
      - run: docker compose down -v --remove-orphans
      - name: Run Playwright tests
        run: docker compose run --rm playwright npx playwright test --fail-on-flaky-tests --trace=retain-on-failure --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - run: docker compose down -v --remove-orphans

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: frontend/blob-report
          include-hidden-files: true
          retention-days: 1

  merge-playwright-reports:
    needs: [test-playwright, changes]
    if: ${{ !cancelled() && needs.changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Download blob reports
        uses: actions/download-artifact@v5
        with:
          path: frontend/all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
        working-directory: frontend
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: frontend/playwright-report
          retention-days: 30
          include-hidden-files: true

  alls-green-playwright:
    if: always()
    needs: test-playwright
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: test-playwright
