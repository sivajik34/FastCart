services:
  # Traefik reverse proxy
  proxy:
    image: traefik:3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --accesslog
      - --log
      - --log.level=DEBUG
      - --api
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      - traefik.http.middlewares.https-redirect.contenttype.autodetect=false
    networks:
      - traefik-public
      - default

  # --- Databases ---
  user-db:
    image: postgres:17
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB}
    ports:
      - "5433:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data

  product-db:
    image: postgres:17
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${PRODUCT_DB_USER}
      POSTGRES_PASSWORD: ${PRODUCT_DB_PASSWORD}
      POSTGRES_DB: ${PRODUCT_DB}
    ports:
      - "5434:5432"
    volumes:
      - product-db-data:/var/lib/postgresql/data

  order-db:
    image: postgres:17
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${ORDER_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_DB}
    ports:
      - "5435:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data

  # --- Services ---
  user-service:
    build:
      context: ./services/user-service
    restart: "no"
    ports:
      - "8001:8000"
    command: uv run fastapi dev app/main.py --host 0.0.0.0 --port 8000
    develop:
      watch:
        - path: ./services/user-service
          action: sync
          target: /app
          ignore:
            - .venv
        - path: ./services/user-service/pyproject.toml
          action: rebuild
    env_file: .env
    depends_on:
      - user-db

  product-service:
    build:
      context: ./services/product-service
    restart: "no"
    ports:
      - "8002:8000"
    command: uv run fastapi dev app/main.py --host 0.0.0.0 --port 8000
    develop:
      watch:
        - path: ./services/product-service
          action: sync
          target: /app
          ignore:
            - .venv
        - path: ./services/product-service/pyproject.toml
          action: rebuild
    env_file: .env
    depends_on:
      - product-db

  order-service:
    build:
      context: ./services/order-service
    restart: "no"
    ports:
      - "8003:8000"
    command: uv run fastapi dev app/main.py --host 0.0.0.0 --port 8000
    develop:
      watch:
        - path: ./services/order-service
          action: sync
          target: /app
          ignore:
            - .venv
        - path: ./services/order-service/pyproject.toml
          action: rebuild
    env_file: .env
    depends_on:
      - order-db

  # --- Utils ---
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://localhost:8001
        - NODE_ENV=development
    restart: "no"
    ports:
      - "5173:80"

  playwright:
    build:
      context: ./frontend
      dockerfile: Dockerfile.playwright
      args:
        - VITE_API_URL=http://user-service:8000
        - NODE_ENV=production
    ipc: host
    depends_on:
      - user-service
      - product-service
      - order-service
      - mailcatcher
    env_file:
      - .env
    environment:
      - VITE_API_URL=http://user-service:8000
      - MAILCATCHER_HOST=http://mailcatcher:1080
      - PLAYWRIGHT_HTML_HOST=0.0.0.0
      - CI=${CI}
    volumes:
      - ./frontend/blob-report:/app/blob-report
      - ./frontend/test-results:/app/test-results
    ports:
      - "9323:9323"

volumes:
  user-db-data:
  product-db-data:
  order-db-data:

networks:
  traefik-public:
    external: false
