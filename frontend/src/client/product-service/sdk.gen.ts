// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise"
import { OpenAPI } from "./core/OpenAPI"
import { request as __request } from "./core/request"
import type {
  ItemsReadItemsData,
  ItemsReadItemsResponse,
  ItemsCreateItemData,
  ItemsCreateItemResponse,
  ItemsReadItemData,
  ItemsReadItemResponse,
  ItemsUpdateItemData,
  ItemsUpdateItemResponse,
  ItemsDeleteItemData,
  ItemsDeleteItemResponse,
  UtilsHealthCheckResponse,
} from "./types.gen"

export class ItemsService {
  /**
   * Read Items
   * @param data The data for the request.
   * @param data.args
   * @param data.kwargs
   * @param data.skip
   * @param data.limit
   * @returns ItemsPublic Successful Response
   * @throws ApiError
   */
  public static readItems(
    data: ItemsReadItemsData,
  ): CancelablePromise<ItemsReadItemsResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/products/items/",
      query: {
        skip: data.skip,
        limit: data.limit,
        args: data.args,
        kwargs: data.kwargs,
      },
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Create Item
   * @param data The data for the request.
   * @param data.args
   * @param data.kwargs
   * @param data.requestBody
   * @returns ItemPublic Successful Response
   * @throws ApiError
   */
  public static createItem(
    data: ItemsCreateItemData,
  ): CancelablePromise<ItemsCreateItemResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/products/items/",
      query: {
        args: data.args,
        kwargs: data.kwargs,
      },
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Read Item
   * @param data The data for the request.
   * @param data.itemId
   * @param data.args
   * @param data.kwargs
   * @returns ItemPublic Successful Response
   * @throws ApiError
   */
  public static readItem(
    data: ItemsReadItemData,
  ): CancelablePromise<ItemsReadItemResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/products/items/{item_id}",
      path: {
        item_id: data.itemId,
      },
      query: {
        args: data.args,
        kwargs: data.kwargs,
      },
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Update Item
   * @param data The data for the request.
   * @param data.itemId
   * @param data.args
   * @param data.kwargs
   * @param data.requestBody
   * @returns ItemPublic Successful Response
   * @throws ApiError
   */
  public static updateItem(
    data: ItemsUpdateItemData,
  ): CancelablePromise<ItemsUpdateItemResponse> {
    return __request(OpenAPI, {
      method: "PUT",
      url: "/products/items/{item_id}",
      path: {
        item_id: data.itemId,
      },
      query: {
        args: data.args,
        kwargs: data.kwargs,
      },
      body: data.requestBody,
      mediaType: "application/json",
      errors: {
        422: "Validation Error",
      },
    })
  }

  /**
   * Delete Item
   * @param data The data for the request.
   * @param data.itemId
   * @param data.args
   * @param data.kwargs
   * @returns Message Successful Response
   * @throws ApiError
   */
  public static deleteItem(
    data: ItemsDeleteItemData,
  ): CancelablePromise<ItemsDeleteItemResponse> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/products/items/{item_id}",
      path: {
        item_id: data.itemId,
      },
      query: {
        args: data.args,
        kwargs: data.kwargs,
      },
      errors: {
        422: "Validation Error",
      },
    })
  }
}

export class UtilsService {
  /**
   * Health Check
   * @returns boolean Successful Response
   * @throws ApiError
   */
  public static healthCheck(): CancelablePromise<UtilsHealthCheckResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/products/utils/health-check/",
    })
  }
}
